# Werker config
box: wercker/golang
build:
  steps:
    - setup-go-workspace
    - script:
        name: install gcc-4.8
        code: |
          sudo apt-get install python-software-properties
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          dpkg --get-selections | grep gcc
          sudo apt-get remove g++-4.6 gcc-4.6
          sudo apt-get update
          sudo apt-get -y install g++-4.8
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50
          g++ --version
    - script:
        name: build libsass
        code: |
          git submodule update --init --recursive
          cd libsass
          make

    # Get dependencies
    - script:
        name: go get
        code: |
          cd $WERCKER_SOURCE_DIR
          go get -t ./...

    # Build the project
    - script:
        name: go build
        code: |
          go build ./...
    - script:
        name: go test
        code: |
          go test -cover
    - script:
        name: Coveralls.io
        code: |
          # The COVERALLS_TOKEN is set in the project at
          # wercker as project environment variable.
          go get github.com/axw/gocov/gocov
          go get github.com/mattn/goveralls
          go test -v -covermode=count -coverprofile=coverage.out
          GIT_BRANCH=$WERCKER_GIT_BRANCH goveralls -coverprofile=coverage.out -service=wercker.com -repotoken $COVERALLS_TOKEN
deploy:
  steps:
    - script:
        name: get version
        code: |
          export APP_VERSION=$(go run sprite/main.go --version)
          export SPRITE=$($GOPATH/bin/sprite)
          echo $SPRITE
    - wercker/github-create-release@1.0.1:
        token: $GITHUB_TOKEN
        tag: $APP_VERSION
        title: Sprite sass tool $APP_VERSION
        draft: true
    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: $SPRITE
        filename: sprite
